#!/usr/bin/perl
use strict;
use warnings;

$| = 1;
use Config;
use YAML;
use YAML::Dumper; # preload ... wtf
use File::Path;
use FindBin;
use Cwd;

use CPAN;
use CPAN::HandleConfig;
CPAN::HandleConfig->load; # preload config

my $workdir = Cwd::realpath("$FindBin::Bin/../bundle-build");
my $repo    = "git://github.com/miyagawa/remedie.git";
my $base    = "remedie";
my $app     = "Remedie Server";
my $tag     = shift @ARGV || "master";

mkdir $workdir, 0777 unless -e $workdir;

my $meta = parse_meta();

chdir $workdir;
if (-e $base){
    chdir $base;
    system "git", "pull";
} else {
    system "git", "clone", $repo;
    chdir $base;
}

system "git", "checkout", $tag;

if ($tag eq 'master') {
    $tag = (`git show --abbrev-commit` =~ /commit (\S+)/)[0];
}

require local::lib;

$ENV{PERL5LIB} = ''; # detach existent local::lib
import local::lib '--self-contained', './cpanlib';

# wtf: ExtUtils::MakeMaker shipped with Leopard is old
$ENV{PERL_MM_OPT} =~ s/INSTALL_BASE=(.*)/$& INSTALLBASE=$1/;

# no man pages
$ENV{PERL_MM_OPT} .= " INSTALLMAN1DIR=none INSTALLMAN3DIR=none";
$ENV{PERL_MM_USE_DEFAULT} = 1;

# Remove /opt from PATH: end users won't have ports
$ENV{PATH} = join ":", grep !/^\/opt/, split /:/, $ENV{PATH};

my @deps = grep $_ ne 'perl', sort keys %{$meta->{requires}};
CPAN::Shell->rematein("notest", "install", @deps);

my $archive = "$base-src-bundle-$tag-$Config{osname}-$Config{version}.tar.gz";
chdir $workdir;
print "Building binary tarball $archive ...";
system "tar --exclude .git -czf $archive $base";
print " DONE\n";
print "$workdir/$archive created.\n";

# Platypus
my $app_path = "$workdir/$app.app";
if (-e $app_path) {
    rmtree($app_path);
}

print "Building Mac application $app.app ...";
system "platypus",
    "-a", $app,
    "-o", 'None',
    "-u", 'miyagawa',
    "-p", '/bin/sh',
    "-V", $meta->{version},
    "-s", '????',
    "-i", "$workdir/$base/root/static/images/appIcon.icns",
    "-I", 'org.remediecode.RemedieServer',
    "-N", "APP_BUNDLER=Platypus-4.0",
    (map { ("-f", "$workdir/$base/$_") } qw( bin cpanlib extlib lib root tools )),
    "-c", "$workdir/$base/bin/bootstrap-server",
    "$app_path";
print " DONE\n";

(my $file = $app) =~ tr/ /-/;
system "zip -r $file-$tag-leopard.zip '$app.app' > /dev/null";
print "$workdir/$file-$tag-leopard.zip created.\n";
rmtree($app_path);

sub parse_meta {
    my $meta = eval { YAML::LoadFile("META.yml") }
        or die "Run perl Makefile.PL NO_META=0 to generate META.yml: $@";
    return $meta;
}
